[{"D:\\TodoListDashboard\\frontend\\src\\index.js":"1","D:\\TodoListDashboard\\frontend\\src\\App.js":"2","D:\\TodoListDashboard\\frontend\\src\\reportWebVitals.js":"3","D:\\TodoListDashboard\\frontend\\src\\Home\\HomePage.js":"4","D:\\TodoListDashboard\\frontend\\src\\Login\\Login.js":"5","D:\\TodoListDashboard\\frontend\\src\\Login\\Register.js":"6","D:\\TodoListDashboard\\frontend\\src\\DashBoard\\DashBoard.js":"7","D:\\TodoListDashboard\\frontend\\src\\api.js":"8"},{"size":535,"mtime":1677326910202,"results":"9","hashOfConfig":"10"},{"size":624,"mtime":1677420164156,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1677326910261,"results":"12","hashOfConfig":"10"},{"size":608,"mtime":1677592211616,"results":"13","hashOfConfig":"10"},{"size":2592,"mtime":1677501544992,"results":"14","hashOfConfig":"10"},{"size":3352,"mtime":1677501568629,"results":"15","hashOfConfig":"10"},{"size":7056,"mtime":1677601747673,"results":"16","hashOfConfig":"10"},{"size":49,"mtime":1677501515804,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"i34oke",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\TodoListDashboard\\frontend\\src\\index.js",[],[],[],"D:\\TodoListDashboard\\frontend\\src\\App.js",[],[],"D:\\TodoListDashboard\\frontend\\src\\reportWebVitals.js",[],[],"D:\\TodoListDashboard\\frontend\\src\\Home\\HomePage.js",[],[],"D:\\TodoListDashboard\\frontend\\src\\Login\\Login.js",[],[],"D:\\TodoListDashboard\\frontend\\src\\Login\\Register.js",[],[],"D:\\TodoListDashboard\\frontend\\src\\DashBoard\\DashBoard.js",["44"],[],"import { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { baseUrl } from \"../api\";\r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\n\r\nimport { Formik } from \"formik\";\r\nexport default function DashBoard() {\r\n  let { email } = useParams();\r\n  const [todo, setTodo] = useState([]);\r\n  const [Numberoftodo, setNumberofTodo] = useState(0);\r\n  const [donearr, setDoneArr] = useState([]);\r\n  let todoarr = [];\r\n  const SubmitClicked = async (values) => {\r\n    todoarr = [...todo];\r\n\r\n    let datatodo = {\r\n      email: email,\r\n      data: values.todo,\r\n      date: new Date(),\r\n      status: \"Pending\",\r\n    };\r\n    await axios.post(`${baseUrl}/posttodo`, datatodo).then((res) => {\r\n      console.log(res);\r\n    });\r\n\r\n    todoarr.push(datatodo);\r\n    setTodo(todoarr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let arr = [];\r\n      let donearr = [];\r\n      await axios\r\n        .get(`${baseUrl}/gettodo`, { params: { email: email } })\r\n        .then(async (res) => {\r\n          setNumberofTodo(res.data.length);\r\n          if (res.data.length !== 0) {\r\n            res.data.forEach((element) => {\r\n              if (element.status === \"Pending\") {\r\n                arr.push(element);\r\n              } else donearr.push(element);\r\n            });\r\n            setTodo(arr);\r\n            setDoneArr(donearr);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  const handleDelete = async (data) => {\r\n    let arr = [];\r\n    let donearr = [];\r\n    const req = { data: data, action: \"done\" };\r\n    await axios\r\n      .post(`${baseUrl}/deletenode`, req)\r\n      .then(async (res) => {\r\n        setNumberofTodo(res.data.length);\r\n        res.data.forEach((element) => {\r\n          // console.log(element);\r\n          if (element.status === \"Pending\") {\r\n            arr.push(element);\r\n          } else donearr.push(element);\r\n        });\r\n        setTodo(arr);\r\n        setDoneArr(donearr);\r\n        console.log(donearr, \"done\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeletePermanent = async (data) => {\r\n    let arr = [];\r\n    let donearr = [];\r\n    const req = { data: data, action: \"delete\" };\r\n    await axios\r\n      .post(`${baseUrl}/deletenode`, req)\r\n      .then(async (res) => {\r\n        setNumberofTodo(res.data.length);\r\n        res.data.forEach((element) => {\r\n          // console.log(element);\r\n          const v = new Date(element.date);\r\n          console.log(v.getDay());\r\n          if (element.status === \"Pending\") {\r\n            arr.push(element);\r\n          } else donearr.push(element);\r\n        });\r\n        setTodo(arr);\r\n        setDoneArr(donearr);\r\n        console.log(donearr, \"done\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <nav className=\"navbar\">\r\n        <div>\r\n          <p>TODOLIST</p>\r\n        </div>\r\n        <div className=\"buttons-div\">\r\n          <Link to=\"/\">\r\n            <button className=\"\">LOGOUT</button>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container\">\r\n        <h1>{Numberoftodo}</h1>\r\n      </div>\r\n\r\n      {/* {todo.length === 0 ? <p>NO DATA</p> : <p></p>} */}\r\n\r\n      <div className=\"todo-div container\">\r\n        <div className=\"create-todo\">\r\n          <h1>CREATE-TODO's</h1>\r\n          <div>\r\n            <div className=\"inputtodo-div\">\r\n              <div>\r\n                <Formik\r\n                  initialValues={{ todo: \"\" }}\r\n                  onSubmit={(values) => {\r\n                    SubmitClicked(values);\r\n                  }}\r\n                >\r\n                  {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                      <br />\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"todo\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        onBlur={handleBlur}\r\n                        value={values.todo}\r\n                      />\r\n                      <br />\r\n\r\n                      <button type=\"submit\">+</button>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n            <div className=\"tododiv\">\r\n              {todo.length <= 0 ? (\r\n                <h1>ADD TASKS </h1>\r\n              ) : (\r\n                todo.map((data, index) => {\r\n                  return (\r\n                    <div className=\"todolist\" key={index}>\r\n                      <button className=\"datatodo\">{data.data}</button>\r\n                      <button\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"Mark Done\"\r\n                        className=\"delete\"\r\n                        onClick={() => {\r\n                          handleDelete(data);\r\n                        }}\r\n                      >\r\n                        Mark Done\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"todo-div-del container  \">\r\n          <h1>COMPLETED TASKS</h1>\r\n          <p></p>\r\n          <div>\r\n            <div className=\"tododiv\">\r\n              {donearr.length <= 0 ? (\r\n                <h1>NO TASKS COMPLETED</h1>\r\n              ) : (\r\n                donearr.map((data, index) => {\r\n                  return (\r\n                    <div className=\"todolist\" key={index}>\r\n                      <button className=\"deletedtask\">{data.data}</button>\r\n                      <button\r\n                        className=\"add\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"ADD BACK\"\r\n                        onClick={() => {\r\n                          handleDelete(data);\r\n                        }}\r\n                      >\r\n                        ADD BACK\r\n                      </button>\r\n                      <button\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"DELETE\"\r\n                        className=\"delete\"\r\n                        onClick={() => {\r\n                          handleDeletePermanent(data);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\TodoListDashboard\\frontend\\src\\api.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":54,"column":6,"nodeType":"47","endLine":54,"endColumn":8,"suggestions":"48"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [email]",{"range":"52","text":"53"},[1507,1509],"[email]"]