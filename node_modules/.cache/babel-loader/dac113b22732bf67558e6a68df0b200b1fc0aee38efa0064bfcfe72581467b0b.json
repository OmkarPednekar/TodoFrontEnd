{"ast":null,"code":"var _jsxFileName = \"D:\\\\BackEnd\\\\TodoFrontEnd\\\\src\\\\DashBoard\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chartDatas } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [chartData, setChartData] = useState({\n    data: chartDatas.map(data => data.userGain)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [console.log(chartData.data), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#eee\",\n        strokeDasharray: \"5 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"pv\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"tLxQ2tGFnC66WuGhPdCmcUgvqig=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","chartDatas","jsxDEV","_jsxDEV","LineChart","_s","chartData","setChartData","data","map","userGain","className","children","console","log","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","XAxis","dataKey","YAxis","CartesianGrid","stroke","strokeDasharray","Line","type","_c","$RefreshReg$"],"sources":["D:/BackEnd/TodoFrontEnd/src/DashBoard/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { chartDatas } from \"./data\";\r\nfunction LineChart() {\r\n  const [chartData, setChartData] = useState({\r\n    data: chartDatas.map((data) => data.userGain),\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      {console.log(chartData.data)}\r\n      <h2 style={{ textAlign: \"center\" }}>Line Chart</h2>\r\n      <LineChart width={500} height={300} data={data}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n}\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,IAAI,EAAEP,UAAU,CAACQ,GAAG,CAAED,IAAI,IAAKA,IAAI,CAACE,QAAQ;EAC9C,CAAC,CAAC;EAEF,oBACEP,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC7BC,OAAO,CAACC,GAAG,CAACR,SAAS,CAACE,IAAI,CAAC,eAC5BL,OAAA;MAAIY,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnDjB,OAAA,CAACC,SAAS;MAACiB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACd,IAAI,EAAEA,IAAK;MAAAI,QAAA,gBAC7CT,OAAA,CAACoB,KAAK;QAACC,OAAO,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxBjB,OAAA,CAACsB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACTjB,OAAA,CAACuB,aAAa;QAACC,MAAM,EAAC,MAAM;QAACC,eAAe,EAAC;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrDjB,OAAA,CAAC0B,IAAI;QAACC,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,IAAI;QAACG,MAAM,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtDjB,OAAA,CAAC0B,IAAI;QAACC,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,IAAI;QAACG,MAAM,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEV;AAACf,EAAA,CAlBQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAmBlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}