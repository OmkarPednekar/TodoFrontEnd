{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoListDashboard\\\\frontend\\\\src\\\\DashBoard\\\\CreateTodo.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodo(_ref) {\n  _s();\n  let {\n    data,\n    email\n  } = _ref;\n  const [newtodo, setNewTodo] = useState([]);\n  let todoarr = [];\n  const SubmitClicked = values => {\n    todoarr = newtodo;\n    let datatodo = {\n      email: email,\n      data: values.data,\n      date: new Date(),\n      status: \"Pending\"\n    };\n    todoarr.push(datatodo);\n    setNewTodo(todoarr);\n    console.log(newtodo);\n  };\n  useEffect(() => {\n    setNewTodo(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputtodo-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            todo: \"\"\n          },\n          onSubmit: values => {\n            SubmitClicked(values);\n          },\n          children: _ref2 => {\n            let {\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n              /* and other goodies */\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"todo\",\n                onChange: handleChange,\n                required: true,\n                onBlur: handleBlur,\n                value: values.todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newtodo.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NO DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : newtodo.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: data.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTodo, \"7aN+KpQ3U9graTszVXizPxlJgLw=\");\n_c = CreateTodo;\nvar _c;\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"names":["useEffect","useState","Formik","jsxDEV","_jsxDEV","CreateTodo","_ref","_s","data","email","newtodo","setNewTodo","todoarr","SubmitClicked","values","datatodo","date","Date","status","push","console","log","children","className","initialValues","todo","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","required","onBlur","value","length","map","_c","$RefreshReg$"],"sources":["D:/TodoListDashboard/frontend/src/DashBoard/CreateTodo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nexport default function CreateTodo({ data, email }) {\r\n  const [newtodo, setNewTodo] = useState([]);\r\n  let todoarr = [];\r\n  const SubmitClicked = (values) => {\r\n    todoarr = newtodo;\r\n    let datatodo = {\r\n      email: email,\r\n      data: values.data,\r\n      date: new Date(),\r\n      status: \"Pending\",\r\n    };\r\n    todoarr.push(datatodo);\r\n    setNewTodo(todoarr);\r\n    console.log(newtodo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNewTodo(data);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"inputtodo-div\">\r\n        <div>\r\n          <Formik\r\n            initialValues={{ todo: \"\" }}\r\n            onSubmit={(values) => {\r\n              SubmitClicked(values);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              /* and other goodies */\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"todo\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  onBlur={handleBlur}\r\n                  value={values.todo}\r\n                />\r\n                <br />\r\n\r\n                <button type=\"submit\">+</button>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {newtodo.length === 0 ? (\r\n          <h1>NO DATA</h1>\r\n        ) : (\r\n          newtodo.map((data) => {\r\n            return (\r\n              <div>\r\n                <button>{data.data}</button>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}