{"ast":null,"code":"var _jsxFileName = \"D:\\\\BackEnd\\\\TodoFrontEnd\\\\src\\\\DashBoard\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chartDatas } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [chartData, setChartData] = useState({\n    data: chartDatas.map(data => data.userGain)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [console.log(chartData.data), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: [1, 2, 3, 4, 5, 6],\n      options: {\n        plugins: {\n          title: {\n            display: true,\n            text: \"Users Gained between 2016-2020\"\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"tLxQ2tGFnC66WuGhPdCmcUgvqig=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","chartDatas","jsxDEV","_jsxDEV","LineChart","_s","chartData","setChartData","data","map","userGain","className","children","console","log","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Line","options","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["D:/BackEnd/TodoFrontEnd/src/DashBoard/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { chartDatas } from \"./data\";\r\nfunction LineChart() {\r\n  const [chartData, setChartData] = useState({\r\n    data: chartDatas.map((data) => data.userGain),\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      {console.log(chartData.data)}\r\n      <h2 style={{ textAlign: \"center\" }}>Line Chart</h2>\r\n      <Line\r\n        data={[1, 2, 3, 4, 5, 6]}\r\n        options={{\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: \"Users Gained between 2016-2020\",\r\n            },\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,IAAI,EAAEP,UAAU,CAACQ,GAAG,CAAED,IAAI,IAAKA,IAAI,CAACE,QAAQ;EAC9C,CAAC,CAAC;EAEF,oBACEP,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC7BC,OAAO,CAACC,GAAG,CAACR,SAAS,CAACE,IAAI,CAAC,eAC5BL,OAAA;MAAIY,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnDjB,OAAA,CAACkB,IAAI;MACHb,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzBc,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR,CAAC;UACDC,MAAM,EAAE;YACNF,OAAO,EAAE;UACX;QACF;MACF;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACf,EAAA,CAzBQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}